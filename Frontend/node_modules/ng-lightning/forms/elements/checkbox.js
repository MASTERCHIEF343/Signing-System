var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component, Input, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, ElementRef, Renderer } from '@angular/core';
import { NglFormElement } from './element';
import { NglFormCheckbox } from './input';
import { NglFormLabelTemplate } from '../form-label';
export var NglFormElementCheckbox = (function (_super) {
    __extends(NglFormElementCheckbox, _super);
    function NglFormElementCheckbox(detector, element, renderer) {
        _super.call(this, detector, element, renderer);
        this.required = false;
    }
    NglFormElementCheckbox.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-form-checkbox',
                    template: "\n    <div class=\"slds-form-element__control\"><span class=\"slds-checkbox\"><abbr *ngIf=\"required\" title=\"required\" class=\"slds-required\">*</abbr><ng-content></ng-content><label [attr.for]=\"uid\" class=\"slds-checkbox__label\"><span class=\"slds-checkbox--faux\"></span><span [nglInternalOutlet]=\"_label\" class=\"slds-form-element__label\"></span></label></span></div><div *ngIf=\"error\" [id]=\"'error_' + uid\" class=\"slds-form-element__help\">{{error}}</div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [{ provide: NglFormElement, useExisting: NglFormElementCheckbox }],
                    styles: [":host { display: block; }"],
                },] },
    ];
    /** @nocollapse */
    NglFormElementCheckbox.ctorParameters = [
        { type: ChangeDetectorRef, },
        { type: ElementRef, },
        { type: Renderer, },
    ];
    NglFormElementCheckbox.propDecorators = {
        'contentEl': [{ type: ContentChild, args: [NglFormCheckbox,] },],
        'labelStr': [{ type: Input, args: ['label',] },],
        'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate,] },],
        'error': [{ type: Input },],
    };
    return NglFormElementCheckbox;
}(NglFormElement));
;
//# sourceMappingURL=checkbox.js.map