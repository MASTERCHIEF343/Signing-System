import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';
export var NglPill = (function () {
    function NglPill(detector) {
        this.detector = detector;
        this.unlinked = true;
        this.nglPillRemove = new EventEmitter();
    }
    NglPill.prototype.remove = function () {
        this.nglPillRemove.emit(null);
    };
    NglPill.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-pill',
                    template: "\n    <ng-content select=\"[nglPillImage]\"></ng-content><ng-content select=\"a\"></ng-content><span *ngIf=\"unlinked\" class=\"slds-pill__label\"><ng-content></ng-content></span><button *ngIf=\"removable\" type=\"button\" (click)=\"remove()\" class=\"slds-button slds-button--icon slds-pill__remove\"><svg nglIcon=\"close\" class=\"slds-button__icon\"></svg></button>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.slds-pill]': 'true',
                    },
                },] },
    ];
    /** @nocollapse */
    NglPill.ctorParameters = [
        { type: ChangeDetectorRef, },
    ];
    NglPill.propDecorators = {
        'nglPillRemove': [{ type: Output },],
    };
    return NglPill;
}());
//# sourceMappingURL=pill.js.map